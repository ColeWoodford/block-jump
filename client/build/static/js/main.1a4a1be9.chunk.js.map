{"version":3,"sources":["three/Player.ts","three/Game.ts","components/HighScores.tsx","constants/socketIO.ts","hooks/useScore.tsx","App.tsx","index.tsx"],"names":["Player","game","controls","moveForward","moveBackward","moveLeft","moveRight","canJump","velocity","direction","prevJumpTime","this","animatePlayer","bind","PointerLockControls","camera","mountRef","current","THREE","performance","now","blocker","document","getElementById","instructions","addEventListener","lock","style","display","scene","add","getObject","event","code","time","deltaJump","y","isLocked","raycaster","ray","origin","copy","position","onObject","intersectObjects","objects","length","delta","prevTime","x","z","Number","normalize","Math","max","Game","player","renderer","vertex","color","highScore","animate","background","fog","light","set","window","innerWidth","innerHeight","antialias","init","floorGeometry","rotateX","PI","attributes","i","l","count","fromBufferAttribute","random","setXYZ","colorsFloor","toNonIndexed","setHSL","push","r","g","b","setAttribute","floorMaterial","vertexColors","floor","boxGeometry","colorsBox","boxMaterial","specular","flatShading","box","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","width","height","aspect","updateProjectionMatrix","ceil","requestAnimationFrame","render","HighScoresContainer","styled","div","HighScoresDisplay","LeaderboardTitle","HighScores","props","scores","map","playerScore","index","senderName","body","SOCKET_SERVER_URL","useScore","roomId","useState","setScores","socketRef","useRef","useEffect","console","log","io","query","on","incomingScores","score","ownedByCurrentUser","senderId","id","disconnect","sendScore","messageBody","emit","GameContainer","Container","ScoreDisplay","h3","Blocker","Instructions","App","scoreRef","setHighScore","NewGame","resize","setInterval","getHighScore","ref","ReactDOM"],"mappings":"4NAIaA,EAAb,WAeE,WAAYC,GAAa,yBAdzBA,UAcwB,OAbxBC,cAawB,OAXxBC,iBAWwB,OAVxBC,kBAUwB,OATxBC,cASwB,OARxBC,eAQwB,OAPxBC,aAOwB,OALxBC,cAKwB,OAJxBC,eAIwB,OAFxBC,kBAEwB,EACtBC,KAAKC,cAAgBD,KAAKC,cAAcC,KAAKF,MAE7CA,KAAKV,KAAOA,EACZU,KAAKT,SAAW,IAAIY,IAAoBH,KAAKV,KAAKc,OAAQJ,KAAKV,KAAKe,SAASC,SAC7EN,KAAKH,SAAW,IAAIU,IACpBP,KAAKF,UAAY,IAAIS,IACrBP,KAAKR,aAAc,EACnBQ,KAAKP,cAAe,EACpBO,KAAKN,UAAW,EAChBM,KAAKL,WAAY,EACjBK,KAAKJ,SAAU,EA1BnB,wCA6BE,WAAc,IAAD,OACXI,KAAKD,aAAeS,YAAYC,MAEhC,IAAMC,EAAeC,SAASC,eAAe,WACvCC,EAAoBF,SAASC,eAAe,gBAEtC,OAAZC,QAAY,IAAZA,KAAcC,iBAAiB,SAAS,WACtC,EAAKvB,SAASwB,UAGhBf,KAAKT,SAASuB,iBAAiB,QAAQ,WACrCD,EAAaG,MAAMC,QAAU,OAC7BP,EAAQM,MAAMC,QAAU,UAG1BjB,KAAKT,SAASuB,iBAAiB,UAAU,WACvCJ,EAAQM,MAAMC,QAAU,QACxBJ,EAAaG,MAAMC,QAAU,MAG/BjB,KAAKV,KAAK4B,MAAMC,IAAInB,KAAKT,SAAS6B,aA4DlCT,SAASG,iBAAiB,WA1DR,SAACO,GACjB,OAAQA,EAAMC,MACZ,IAAK,UACL,IAAK,OACH,EAAK9B,aAAc,EACnB,MAEF,IAAK,YACL,IAAK,OACH,EAAKE,UAAW,EAChB,MAEF,IAAK,YACL,IAAK,OACH,EAAKD,cAAe,EACpB,MAEF,IAAK,aACL,IAAK,OACH,EAAKE,WAAY,EACjB,MAEF,IAAK,QACH,IAAM4B,EAAOf,YAAYC,MACnBe,EAAYD,EAAO,EAAKxB,cACT,IAAjB,EAAKH,SAAoB4B,EAAY,MACvC,EAAK3B,SAAS4B,GAAK,IACnB,EAAK1B,aAAewB,GAEtB,EAAK3B,SAAU,MA8BrBe,SAASG,iBAAiB,SAzBV,SAACO,GACf,OAAQA,EAAMC,MACZ,IAAK,UACL,IAAK,OACH,EAAK9B,aAAc,EACnB,MAEF,IAAK,YACL,IAAK,OACH,EAAKE,UAAW,EAChB,MAEF,IAAK,YACL,IAAK,OACH,EAAKD,cAAe,EACpB,MAEF,IAAK,aACL,IAAK,OACH,EAAKE,WAAY,QAxG3B,2BAiHE,WACE,IAAM4B,EAAOf,YAAYC,MAEzB,IAA+B,IAA3BT,KAAKT,SAASmC,SAAmB,CACnC1B,KAAKV,KAAKqC,UAAUC,IAAIC,OAAOC,KAAK9B,KAAKT,SAAS6B,YAAYW,UAC9D/B,KAAKV,KAAKqC,UAAUC,IAAIC,OAAOJ,GAAK,GAEpC,IAEMO,EAFgBhC,KAAKV,KAAKqC,UAAUM,iBAAiBjC,KAAKV,KAAK4C,SAEtCC,OAAS,EAElCC,GAASb,EAAOvB,KAAKV,KAAK+C,UAAY,IAE5CrC,KAAKH,SAASyC,GAAuB,GAAlBtC,KAAKH,SAASyC,EAAWF,EAC5CpC,KAAKH,SAAS0C,GAAuB,GAAlBvC,KAAKH,SAAS0C,EAAWH,EAE5CpC,KAAKH,SAAS4B,GAAK,IAAM,IAAQW,EAEjCpC,KAAKF,UAAUyC,EAAIC,OAAOxC,KAAKR,aAAegD,OAAOxC,KAAKP,cAC1DO,KAAKF,UAAUwC,EAAIE,OAAOxC,KAAKL,WAAa6C,OAAOxC,KAAKN,UACxDM,KAAKF,UAAU2C,aAEXzC,KAAKR,aAAeQ,KAAKP,gBAC3BO,KAAKH,SAAS0C,GAAwB,IAAnBvC,KAAKF,UAAUyC,EAAYH,IAC5CpC,KAAKN,UAAYM,KAAKL,aAAWK,KAAKH,SAASyC,GAAwB,IAAnBtC,KAAKF,UAAUwC,EAAYF,IAElE,IAAbJ,IACFhC,KAAKH,SAAS4B,EAAIiB,KAAKC,IAAI,EAAG3C,KAAKH,SAAS4B,GAC5CzB,KAAKJ,SAAU,GAGjBI,KAAKT,SAASI,WAAWK,KAAKH,SAASyC,EAAIF,GAC3CpC,KAAKT,SAASC,aAAaQ,KAAKH,SAAS0C,EAAIH,GAE7CpC,KAAKT,SAAS6B,YAAYW,SAASN,GAAKzB,KAAKH,SAAS4B,EAAIW,EAEtDpC,KAAKT,SAAS6B,YAAYW,SAASN,EAAI,KACzCzB,KAAKH,SAAS4B,EAAI,EAClBzB,KAAKT,SAAS6B,YAAYW,SAASN,EAAI,GAEvCzB,KAAKJ,SAAU,GAGnBI,KAAKV,KAAK+C,SAAWd,MA5JzB,KCgKeqB,EAjKf,WAmBE,WAAYvC,GAAgB,yBAlB5BA,cAkB2B,OAhB3BwC,YAgB2B,OAd3B3B,WAc2B,OAb3Bd,YAa2B,OAZ3B0C,cAY2B,OAX3BnB,eAW2B,OAT3BO,aAS2B,OAP3BG,cAO2B,OAL3BU,YAK2B,OAJ3BC,WAI2B,OAF3BC,eAE2B,EACzBjD,KAAKkD,QAAUlD,KAAKkD,QAAQhD,KAAKF,MAEjCA,KAAKK,SAAWA,EAChBL,KAAKkB,MAAQ,IAAIX,IACjBP,KAAKkB,MAAMiC,WAAa,IAAI5C,IAAY,UACxCP,KAAKkB,MAAMkC,IAAM,IAAI7C,IAAU,SAAU,EAAG,KAE5C,IAAM8C,EAAQ,IAAI9C,IAAsB,SAAU,QAAU,KAC5D8C,EAAMtB,SAASuB,IAAI,GAAK,EAAG,KAC3BtD,KAAKkB,MAAMC,IAAIkC,GAEfrD,KAAK+C,OAAS,IAAIxC,IAClBP,KAAKgD,MAAQ,IAAIzC,IAEjBP,KAAKiD,UAAY,EAEjBjD,KAAKI,OAAS,IAAIG,IAChB,GACAgD,OAAOC,WAAaD,OAAOE,YAC3B,GACA,KAGFzD,KAAK8C,SAAW,IAAIvC,IAAoB,CAAEmD,WAAW,IAErD1D,KAAKkC,QAAU,GAEflC,KAAK2B,UAAY,IAAIpB,IAAgB,IAAIA,IAAiB,IAAIA,IAAc,GAAI,EAAG,GAAI,EAAG,IAE1FP,KAAK6C,OAAS,IAAIxD,EAAOW,MAEzBA,KAAKqC,SAAW7B,YAAYC,MAnDhC,wCAsDE,WACET,KAAKI,OAAO2B,SAASN,EAAI,GAEzBzB,KAAK6C,OAAOc,OAGZ,IAAIC,EAAgB,IAAIrD,IAA0B,IAAM,IAAM,IAAK,KACnEqD,EAAcC,SAASnB,KAAKoB,GAAK,GAKjC,IAFA,IAAI/B,EAAgB6B,EAAcG,WAEzBC,EAAI,EAAGC,EAAIlC,EAASmC,MAAOF,EAAIC,EAAGD,IACzChE,KAAK+C,OAAOoB,oBAAoBpC,EAAUiC,GAE1ChE,KAAK+C,OAAOT,GAAqB,GAAhBI,KAAK0B,SAAgB,GACtCpE,KAAK+C,OAAOtB,GAAqB,EAAhBiB,KAAK0B,SACtBpE,KAAK+C,OAAOR,GAAqB,GAAhBG,KAAK0B,SAAgB,GAEtCrC,EAASsC,OAAOL,EAAGhE,KAAK+C,OAAOT,EAAGtC,KAAK+C,OAAOtB,EAAGzB,KAAK+C,OAAOR,GAS/D,IAFA,IAAM+B,EAAc,GAEXN,EAAI,EAAGC,GAHhBlC,GAFA6B,EAAgBA,EAAcW,gBAELR,WAAWhC,UAGPmC,MAAOF,EAAIC,EAAGD,IACzChE,KAAKgD,MAAMwB,OAAuB,GAAhB9B,KAAK0B,SAAiB,GAAK,IAAsB,IAAhB1B,KAAK0B,SAAkB,KAC1EE,EAAYG,KAAKzE,KAAKgD,MAAM0B,EAAG1E,KAAKgD,MAAM2B,EAAG3E,KAAKgD,MAAM4B,GAG1DhB,EAAciB,aAAa,QAAS,IAAItE,IAA6B+D,EAAa,IAElF,IAAMQ,EAAgB,IAAIvE,IAAwB,CAAEwE,cAAc,IAE5DC,EAAQ,IAAIzE,IAAWqD,EAAekB,GAC5C9E,KAAKkB,MAAMC,IAAI6D,GASf,IALA,IAAMC,EAAc,IAAI1E,IAAwB,GAAI,GAAI,IAAIgE,eAGtDW,EAAY,GAETlB,EAAI,EAAGC,GAHhBlC,EAAWkD,EAAYlB,WAAWhC,UAGLmC,MAAOF,EAAIC,EAAGD,IACzChE,KAAKgD,MAAMwB,OAAuB,GAAhB9B,KAAK0B,SAAiB,GAAK,IAAsB,IAAhB1B,KAAK0B,SAAkB,KAC1Ec,EAAUT,KAAKzE,KAAKgD,MAAM0B,EAAG1E,KAAKgD,MAAM2B,EAAG3E,KAAKgD,MAAM4B,GAGxDK,EAAYJ,aAAa,QAAS,IAAItE,IAA6B2E,EAAW,IAE9E,IAAK,IAAIlB,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAMmB,EAAc,IAAI5E,IAAwB,CAC9C6E,SAAU,SACVC,aAAa,EACbN,cAAc,IAEhBI,EAAYnC,MAAMwB,OAAuB,GAAhB9B,KAAK0B,SAAiB,GAAK,IAAsB,IAAhB1B,KAAK0B,SAAkB,KAEjF,IAGMkB,EAAM,IAAI/E,IAAW0E,EAAaE,GACxCG,EAAIvD,SAASO,EAJO,GAIHI,KAAKsC,MAJF,GAIQtC,KAAK0B,SAAyB,IAC1DkB,EAAIvD,SAASN,EALO,GAKHiB,KAAKsC,MAJO,GAIDtC,KAAK0B,UAAiD,GAClFkB,EAAIvD,SAASQ,EANO,GAMHG,KAAKsC,MANF,GAMQtC,KAAK0B,SAAyB,IAE1DpE,KAAKkB,MAAMC,IAAImE,GACftF,KAAKkC,QAAQuC,KAAKa,GAIpBtF,KAAK8C,SAASyC,cAAchC,OAAOiC,kBACnCxF,KAAK8C,SAAS2C,QAAQlC,OAAOC,WAAYD,OAAOE,aAChDzD,KAAKK,SAASC,QAAQoF,YAAY1F,KAAK8C,SAAS6C,cAnIpD,oBAsIE,WACE,IAAMC,EAAQrC,OAAOC,WACfqC,EAAStC,OAAOE,YAEtBzD,KAAKI,OAAO0F,OAASF,EAAQC,EAC7B7F,KAAKI,OAAO2F,yBAEZ/F,KAAK8C,SAAS2C,QAAQG,EAAOC,KA7IjC,0BAgJE,WACE,OAAOnD,KAAKsD,KAAKhG,KAAKiD,aAjJ1B,qBAoJE,WACEgD,sBAAsBjG,KAAKkD,SAEvBlD,KAAKI,OAAO2B,SAASN,EAAIzB,KAAKiD,YAChCjD,KAAKiD,UAAYjD,KAAKI,OAAO2B,SAASN,GAGxCzB,KAAK6C,OAAO5C,gBAEZD,KAAK8C,SAASoD,OAAOlG,KAAKkB,MAAOlB,KAAKI,YA7J1C,K,OCGM+F,EAAsBC,IAAOC,IAAV,4IAQnBC,EAAoBF,IAAOC,IAAV,+CAIjBE,EAAmBH,IAAOC,IAAV,6FAqBPG,EAfqB,SAACC,GAAW,IACtCC,EAAWD,EAAXC,OAER,OACE,eAACP,EAAD,WACE,cAACI,EAAD,0BACCG,EAAOC,KAAI,SAACC,EAAkBC,GAAnB,OACV,eAACP,EAAD,WACGM,EAAYE,WADf,QACgCF,EAAYG,OADpBF,U,gBC/BnBG,EAAoB,wBC8ClBC,EAtCE,SAACC,GAAiB,IAAD,EACJC,mBAAc,IADV,mBACzBT,EADyB,KACjBU,EADiB,KAE1BC,EAAYC,mBAElBC,qBAAU,WAgBR,OAdAC,QAAQC,IAAI,QAAST,GACrBK,EAAU/G,QAAUoH,aAAGV,EAAmB,CACxCW,MAAO,CAAET,YAIXG,EAAU/G,QAAQsH,GDhBuB,wBCgBW,SAAClB,GACnD,IAAMmB,EAAiBnB,EAAOC,KAAI,SAACmB,GAAD,mBAAC,eAC9BA,GAD6B,IAEhCC,mBAAoBD,EAAME,WAAaX,EAAU/G,QAAQ2H,QAE3Db,EAAUS,MAGL,WACLR,EAAU/G,QAAQ4H,gBAEnB,CAAChB,IAYJ,MAAO,CAAER,SAAQyB,UARC,SAACC,GACjBf,EAAU/G,QAAQ+H,KDjCiB,kBCiCa,CAC9CtB,KAAMqB,EACNJ,SAAUX,EAAU/G,QAAQ2H,GAC5BnB,WAAY,YC9BZwB,G,MAAgBlC,IAAOC,IAAV,mFAMbkC,EAAYnC,IAAOC,IAAV,+FAMTmC,EAAepC,IAAOqC,GAAV,2GAOZC,EAAUtC,IAAOC,IAAV,6HAOPsC,EAAevC,IAAOC,IAAV,igBA+EHuC,MAlDf,WACE,IAAMvI,EAAWiH,iBAAuB,MAClCuB,EAAWvB,iBAAe,GAFnB,EAGqBH,mBAAS,GAH9B,mBAGNlE,EAHM,KAGK6F,EAHL,OAIiB7B,EF9DJ,GE8DlBkB,EAJK,EAILA,UAAWzB,EAJN,EAIMA,OAwBnB,OAtBAa,qBAAU,WACR,IAAMwB,EAAU,IAAInG,EAAKvC,GACzB0I,EAAQpF,OACRoF,EAAQ7F,UACRK,OAAOzC,iBACL,UACA,WACEiI,EAAQC,YAEV,GAEFC,aAAY,kBAAMH,EAAaC,EAAQG,kBAAiB,OACvD,IAEH3B,qBAAU,WACJtE,EAAY4F,EAASvI,SAEvB6H,EAAUlF,GAEZ4F,EAASvI,QAAU2C,IAClB,CAACA,EAAWkF,IAGb,eAACI,EAAD,WACE,eAACC,EAAD,0BAA2BvF,KAC3B,cAAC,EAAD,CAAYyD,OAAQA,IACpB,cAACgC,EAAD,CAAST,GAAG,UAAZ,SACE,eAACU,EAAD,CAAcV,GAAG,eAAjB,UACE,iDACA,uBACA,uBAHF,aAKE,uBALF,cAOE,uBAPF,cASE,4BAGJ,cAACK,EAAD,CAAea,IAAK9I,QC1G1B+I,IAASlD,OAAO,cAAC,EAAD,IAASvF,SAASC,eAAe,W","file":"static/js/main.1a4a1be9.chunk.js","sourcesContent":["import * as THREE from 'three';\r\nimport { Game } from './Game';\r\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls';\r\n\r\nexport class Player {\r\n  game: any;\r\n  controls: any;\r\n\r\n  moveForward: boolean;\r\n  moveBackward: boolean;\r\n  moveLeft: boolean;\r\n  moveRight: boolean;\r\n  canJump: boolean;\r\n\r\n  velocity: THREE.Vector3;\r\n  direction: THREE.Vector3;\r\n\r\n  prevJumpTime: any;\r\n\r\n  constructor(game: Game) {\r\n    this.animatePlayer = this.animatePlayer.bind(this);\r\n\r\n    this.game = game;\r\n    this.controls = new PointerLockControls(this.game.camera, this.game.mountRef.current);\r\n    this.velocity = new THREE.Vector3();\r\n    this.direction = new THREE.Vector3();\r\n    this.moveForward = false;\r\n    this.moveBackward = false;\r\n    this.moveLeft = false;\r\n    this.moveRight = false;\r\n    this.canJump = false;\r\n  }\r\n\r\n  init(): void {\r\n    this.prevJumpTime = performance.now();\r\n    // change to ref?\r\n    const blocker: any = document.getElementById('blocker');\r\n    const instructions: any = document.getElementById('instructions');\r\n\r\n    instructions?.addEventListener('click', () => {\r\n      this.controls.lock();\r\n    });\r\n\r\n    this.controls.addEventListener('lock', () => {\r\n      instructions.style.display = 'none';\r\n      blocker.style.display = 'none';\r\n    });\r\n\r\n    this.controls.addEventListener('unlock', () => {\r\n      blocker.style.display = 'block';\r\n      instructions.style.display = '';\r\n    });\r\n\r\n    this.game.scene.add(this.controls.getObject());\r\n\r\n    const onKeyDown = (event: any) => {\r\n      switch (event.code) {\r\n        case 'ArrowUp':\r\n        case 'KeyW':\r\n          this.moveForward = true;\r\n          break;\r\n\r\n        case 'ArrowLeft':\r\n        case 'KeyA':\r\n          this.moveLeft = true;\r\n          break;\r\n\r\n        case 'ArrowDown':\r\n        case 'KeyS':\r\n          this.moveBackward = true;\r\n          break;\r\n\r\n        case 'ArrowRight':\r\n        case 'KeyD':\r\n          this.moveRight = true;\r\n          break;\r\n\r\n        case 'Space':\r\n          const time = performance.now();\r\n          const deltaJump = time - this.prevJumpTime;\r\n          if (this.canJump === true && deltaJump > 500) {\r\n            this.velocity.y += 350;\r\n            this.prevJumpTime = time;\r\n          }\r\n          this.canJump = false;\r\n          break;\r\n      }\r\n    };\r\n\r\n    const onKeyUp = (event: any) => {\r\n      switch (event.code) {\r\n        case 'ArrowUp':\r\n        case 'KeyW':\r\n          this.moveForward = false;\r\n          break;\r\n\r\n        case 'ArrowLeft':\r\n        case 'KeyA':\r\n          this.moveLeft = false;\r\n          break;\r\n\r\n        case 'ArrowDown':\r\n        case 'KeyS':\r\n          this.moveBackward = false;\r\n          break;\r\n\r\n        case 'ArrowRight':\r\n        case 'KeyD':\r\n          this.moveRight = false;\r\n          break;\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    document.addEventListener('keyup', onKeyUp);\r\n  }\r\n\r\n  animatePlayer(): void {\r\n    const time = performance.now();\r\n\r\n    if (this.controls.isLocked === true) {\r\n      this.game.raycaster.ray.origin.copy(this.controls.getObject().position);\r\n      this.game.raycaster.ray.origin.y -= 10;\r\n\r\n      const intersections = this.game.raycaster.intersectObjects(this.game.objects);\r\n\r\n      const onObject = intersections.length > 0;\r\n\r\n      const delta = (time - this.game.prevTime) / 1000;\r\n\r\n      this.velocity.x -= this.velocity.x * 10.0 * delta;\r\n      this.velocity.z -= this.velocity.z * 10.0 * delta;\r\n\r\n      this.velocity.y -= 9.8 * 100.0 * delta; // 100.0 = mass\r\n\r\n      this.direction.z = Number(this.moveForward) - Number(this.moveBackward);\r\n      this.direction.x = Number(this.moveRight) - Number(this.moveLeft);\r\n      this.direction.normalize(); // this ensures consistent movements in all directions\r\n\r\n      if (this.moveForward || this.moveBackward)\r\n        this.velocity.z -= this.direction.z * 400.0 * delta;\r\n      if (this.moveLeft || this.moveRight) this.velocity.x -= this.direction.x * 400.0 * delta;\r\n\r\n      if (onObject === true) {\r\n        this.velocity.y = Math.max(0, this.velocity.y);\r\n        this.canJump = true;\r\n      }\r\n\r\n      this.controls.moveRight(-this.velocity.x * delta);\r\n      this.controls.moveForward(-this.velocity.z * delta);\r\n\r\n      this.controls.getObject().position.y += this.velocity.y * delta; // new behavior\r\n\r\n      if (this.controls.getObject().position.y < 10) {\r\n        this.velocity.y = 0;\r\n        this.controls.getObject().position.y = 10;\r\n\r\n        this.canJump = true;\r\n      }\r\n    }\r\n    this.game.prevTime = time;\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\nimport { Player } from './Player';\r\n\r\nexport class Game {\r\n  mountRef: any;\r\n\r\n  player: Player;\r\n\r\n  scene: THREE.Scene;\r\n  camera: THREE.PerspectiveCamera;\r\n  renderer: THREE.Renderer;\r\n  raycaster: THREE.Raycaster;\r\n\r\n  objects: any[];\r\n\r\n  prevTime: any;\r\n\r\n  vertex: THREE.Vector3;\r\n  color: THREE.Color;\r\n\r\n  highScore: number;\r\n\r\n  constructor(mountRef: any) {\r\n    this.animate = this.animate.bind(this);\r\n\r\n    this.mountRef = mountRef;\r\n    this.scene = new THREE.Scene();\r\n    this.scene.background = new THREE.Color(0xffffff);\r\n    this.scene.fog = new THREE.Fog(0xffffff, 0, 750);\r\n\r\n    const light = new THREE.HemisphereLight(0xeeeeff, 0x777788, 0.75);\r\n    light.position.set(0.5, 1, 0.75);\r\n    this.scene.add(light);\r\n\r\n    this.vertex = new THREE.Vector3();\r\n    this.color = new THREE.Color();\r\n\r\n    this.highScore = 0;\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      0.1,\r\n      1000\r\n    );\r\n\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n\r\n    this.objects = [];\r\n\r\n    this.raycaster = new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, -1, 0), 0, 10);\r\n\r\n    this.player = new Player(this);\r\n\r\n    this.prevTime = performance.now();\r\n  }\r\n\r\n  init(): void {\r\n    this.camera.position.y = 10;\r\n\r\n    this.player.init();\r\n\r\n    // floor\r\n    let floorGeometry = new THREE.PlaneBufferGeometry(2000, 2000, 100, 100);\r\n    floorGeometry.rotateX(-Math.PI / 2);\r\n\r\n    // vertex displacement\r\n    let position: any = floorGeometry.attributes;\r\n\r\n    for (let i = 0, l = position.count; i < l; i++) {\r\n      this.vertex.fromBufferAttribute(position, i);\r\n\r\n      this.vertex.x += Math.random() * 20 - 10;\r\n      this.vertex.y += Math.random() * 2;\r\n      this.vertex.z += Math.random() * 20 - 10;\r\n\r\n      position.setXYZ(i, this.vertex.x, this.vertex.y, this.vertex.z);\r\n    }\r\n\r\n    //@ts-ignore\r\n    floorGeometry = floorGeometry.toNonIndexed(); // ensure each face has unique vertices\r\n\r\n    position = floorGeometry.attributes.position;\r\n    const colorsFloor = [];\r\n\r\n    for (let i = 0, l = position.count; i < l; i++) {\r\n      this.color.setHSL(Math.random() * 0.3 + 0.5, 0.75, Math.random() * 0.25 + 0.75);\r\n      colorsFloor.push(this.color.r, this.color.g, this.color.b);\r\n    }\r\n\r\n    floorGeometry.setAttribute('color', new THREE.Float32BufferAttribute(colorsFloor, 3));\r\n\r\n    const floorMaterial = new THREE.MeshBasicMaterial({ vertexColors: true });\r\n\r\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\n    this.scene.add(floor);\r\n\r\n    // objects\r\n    //@ts-ignore\r\n    const boxGeometry = new THREE.BoxBufferGeometry(20, 20, 20).toNonIndexed();\r\n\r\n    position = boxGeometry.attributes.position;\r\n    const colorsBox = [];\r\n\r\n    for (let i = 0, l = position.count; i < l; i++) {\r\n      this.color.setHSL(Math.random() * 0.3 + 0.5, 0.75, Math.random() * 0.25 + 0.75);\r\n      colorsBox.push(this.color.r, this.color.g, this.color.b);\r\n    }\r\n\r\n    boxGeometry.setAttribute('color', new THREE.Float32BufferAttribute(colorsBox, 3));\r\n\r\n    for (let i = 0; i < 700; i++) {\r\n      const boxMaterial = new THREE.MeshPhongMaterial({\r\n        specular: 0xffffff,\r\n        flatShading: true,\r\n        vertexColors: true,\r\n      });\r\n      boxMaterial.color.setHSL(Math.random() * 0.2 + 0.5, 0.75, Math.random() * 0.25 + 0.75);\r\n\r\n      const cubeDensity = 20; // how spread out are cubes\r\n      const verticalDistribution = 40; // how high up should the cubes extend\r\n\r\n      const box = new THREE.Mesh(boxGeometry, boxMaterial);\r\n      box.position.x = Math.floor(Math.random() * cubeDensity - 10) * cubeDensity;\r\n      box.position.y = Math.floor(Math.random() * verticalDistribution) * cubeDensity + 10;\r\n      box.position.z = Math.floor(Math.random() * cubeDensity - 10) * cubeDensity;\r\n\r\n      this.scene.add(box);\r\n      this.objects.push(box);\r\n    }\r\n\r\n    //@ts-ignore\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.mountRef.current.appendChild(this.renderer.domElement);\r\n  }\r\n\r\n  resize(): void {\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n\r\n    this.camera.aspect = width / height;\r\n    this.camera.updateProjectionMatrix();\r\n\r\n    this.renderer.setSize(width, height);\r\n  }\r\n\r\n  getHighScore(): number {\r\n    return Math.ceil(this.highScore);\r\n  }\r\n\r\n  animate(): void {\r\n    requestAnimationFrame(this.animate);\r\n\r\n    if (this.camera.position.y > this.highScore) {\r\n      this.highScore = this.camera.position.y;\r\n    }\r\n\r\n    this.player.animatePlayer();\r\n\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import styled from 'styled-components';\r\n\r\ninterface Props {\r\n  scores: any;\r\n}\r\n\r\nconst HighScoresContainer = styled.div`\r\n  position: absolute;\r\n  right: 1rem;\r\n  top: 1rem;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 1rem;\r\n`;\r\n\r\nconst HighScoresDisplay = styled.div`\r\n  color: #aaaaaa;\r\n`;\r\n\r\nconst LeaderboardTitle = styled.div`\r\n  margin-bottom: 0.5rem;\r\n  font-size: 20px;\r\n  color: #aaaaaa;\r\n`;\r\n\r\nconst HighScores: React.FC<Props> = (props) => {\r\n  const { scores } = props;\r\n\r\n  return (\r\n    <HighScoresContainer>\r\n      <LeaderboardTitle>Leaderboard</LeaderboardTitle>\r\n      {scores.map((playerScore: any, index: number) => (\r\n        <HighScoresDisplay key={index}>\r\n          {playerScore.senderName} --- {playerScore.body}\r\n        </HighScoresDisplay>\r\n      ))}\r\n    </HighScoresContainer>\r\n  );\r\n};\r\n\r\nexport default HighScores;\r\n","export const SOCKET_SERVER_URL = \"http://localhost:5000\";\r\n\r\nexport const NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\r\nexport const NEW_SCORE_MESSAGE_EVENT = \"newScoreMessage\";\r\nexport const NEW_HIGH_SCORES_MESSAGE_EVENT = \"newHighScoresMessage\";\r\n\r\nexport const TEMP_ROOM_ID = 1;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { io } from 'socket.io-client/build/index';\r\nimport {\r\n  NEW_SCORE_MESSAGE_EVENT,\r\n  NEW_HIGH_SCORES_MESSAGE_EVENT,\r\n  SOCKET_SERVER_URL,\r\n} from '../constants/socketIO';\r\n\r\nconst useScore = (roomId: any) => {\r\n  const [scores, setScores] = useState<any>([]);\r\n  const socketRef = useRef<any>();\r\n\r\n  useEffect(() => {\r\n    // Creates a WebSocket Connection\r\n    console.log('here ', SOCKET_SERVER_URL);\r\n    socketRef.current = io(SOCKET_SERVER_URL, {\r\n      query: { roomId },\r\n    });\r\n\r\n    // Listens for incoming scores\r\n    socketRef.current.on(NEW_HIGH_SCORES_MESSAGE_EVENT, (scores: any) => {\r\n      const incomingScores = scores.map((score: any) => ({\r\n        ...score,\r\n        ownedByCurrentUser: score.senderId === socketRef.current.id,\r\n      }));\r\n      setScores(incomingScores);\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [roomId]);\r\n\r\n  // Sends a score to the server that\r\n  // forwards it to the leaderboard of the same room\r\n  const sendScore = (messageBody: any) => {\r\n    socketRef.current.emit(NEW_SCORE_MESSAGE_EVENT, {\r\n      body: messageBody,\r\n      senderId: socketRef.current.id,\r\n      senderName: 'Cole',\r\n    });\r\n  };\r\n\r\n  return { scores, sendScore };\r\n};\r\n\r\nexport default useScore;\r\n","import { useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport Game from './three/Game';\r\nimport HighScores from './components/HighScores';\r\nimport useScore from './hooks/useScore';\r\nimport { TEMP_ROOM_ID } from './constants/socketIO';\r\n\r\nimport './App.css';\r\n\r\nconst GameContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ScoreDisplay = styled.h3`\r\n  position: absolute;\r\n  font-size: 35px;\r\n  color: #aaaaaa;\r\n  margin: 1rem;\r\n`;\r\n\r\nconst Blocker = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst Instructions = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: box;\r\n\r\n  -webkit-box-orient: horizontal;\r\n  -moz-box-orient: horizontal;\r\n  box-orient: horizontal;\r\n\r\n  -webkit-box-pack: center;\r\n  -moz-box-pack: center;\r\n  box-pack: center;\r\n\r\n  -webkit-box-align: center;\r\n  -moz-box-align: center;\r\n  box-align: center;\r\n\r\n  color: #ffffff;\r\n  text-align: center;\r\n  font-family: Arial;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction App() {\r\n  const mountRef = useRef<HTMLDivElement>(null);\r\n  const scoreRef = useRef<number>(0);\r\n  const [highScore, setHighScore] = useState(0);\r\n  const { sendScore, scores } = useScore(TEMP_ROOM_ID);\r\n\r\n  useEffect(() => {\r\n    const NewGame = new Game(mountRef);\r\n    NewGame.init();\r\n    NewGame.animate();\r\n    window.addEventListener(\r\n      'resize',\r\n      function () {\r\n        NewGame.resize();\r\n      },\r\n      false\r\n    );\r\n    setInterval(() => setHighScore(NewGame.getHighScore()), 500);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (highScore > scoreRef.current) {\r\n      // Send score to leaderboard if it updates\r\n      sendScore(highScore);\r\n    }\r\n    scoreRef.current = highScore;\r\n  }, [highScore, sendScore]);\r\n\r\n  return (\r\n    <Container>\r\n      <ScoreDisplay>HIGH SCORE: {highScore}</ScoreDisplay>\r\n      <HighScores scores={scores} />\r\n      <Blocker id=\"blocker\">\r\n        <Instructions id=\"instructions\">\r\n          <span>CLICK TO PLAY</span>\r\n          <br />\r\n          <br />\r\n          Move: WASD\r\n          <br />\r\n          Jump: SPACE\r\n          <br />\r\n          Look: MOUSE\r\n          <br />\r\n        </Instructions>\r\n      </Blocker>\r\n      <GameContainer ref={mountRef} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}